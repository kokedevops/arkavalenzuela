spring.application.name=arkajvalenzuela

# Configuración del servidor
server.port=8081

# Configuración de la base de datos MySQL (local fallback)
spring.datasource.url=jdbc:mysql://localhost:3306/arkavalenzuelabd
spring.datasource.username=jvalenzuela
spring.datasource.password=Arca2025*
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# 🍃 MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/arka_notifications
spring.data.mongodb.auto-index-creation=true

# 📧 Email Configuration (SMTP)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${ARKA_EMAIL_USERNAME:}
spring.mail.password=${ARKA_EMAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# ARKA Email Settings
arka.mail.from=noreply@arka.com
arka.mail.enabled=false

# Configuración específica para múltiples stores
spring.data.mongodb.repositories.enabled=true
spring.data.jpa.repositories.enabled=true
spring.data.r2dbc.repositories.enabled=false

# AWS Configuration para Saga Pattern
# Habilitar modo mock para desarrollo local (sin AWS real)
aws.mock.enabled=${AWS_MOCK_ENABLED:true}

aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket-name=${AWS_S3_BUCKET:arka-templates}
aws.sns.saga-topic-arn=${AWS_SNS_SAGA_TOPIC:arn:aws:sns:us-east-1:123456789:arka-saga-topic}
aws.lambda.inventory-function-name=${AWS_LAMBDA_INVENTORY:arka-saga-inventory}
aws.lambda.shipping-function-name=${AWS_LAMBDA_SHIPPING:arka-saga-shipping}
aws.lambda.notification-function-name=${AWS_LAMBDA_NOTIFICATION:arka-saga-notification}

# External Services Configuration
external.services.inventory.url=${INVENTORY_SERVICE_URL:http://localhost:8081}
external.services.shipping.url=${SHIPPING_SERVICE_URL:http://localhost:8082}