# Eureka Server ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: eureka-server-config
  namespace: arka-ecommerce
data:
  application.yml: |
    server:
      port: 8761
    
    spring:
      application:
        name: eureka-server
      cloud:
        config:
          uri: http://config-server-service:8888
          fail-fast: false
          retry:
            max-attempts: 20
            initial-interval: 3000
    
    eureka:
      instance:
        hostname: eureka-server
        prefer-ip-address: true
      client:
        register-with-eureka: false
        fetch-registry: false
        service-url:
          defaultZone: http://eureka-service:8761/eureka/
      server:
        enable-self-preservation: false
        eviction-interval-timer-in-ms: 4000
    
    management:
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        health:
          show-details: always
    
    logging:
      level:
        com.netflix.eureka: DEBUG
        com.netflix.discovery: DEBUG
---
# Eureka Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-server
  namespace: arka-ecommerce
  labels:
    app: eureka-server
    tier: infrastructure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eureka-server
  template:
    metadata:
      labels:
        app: eureka-server
        tier: infrastructure
    spec:
      containers:
      - name: eureka-server
        image: arka/eureka-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8761
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: SPRING_CLOUD_CONFIG_URI
          value: "http://config-server-service:8888"
        volumeMounts:
        - name: eureka-config-volume
          mountPath: /app/config
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8761
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8761
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: eureka-config-volume
        configMap:
          name: eureka-server-config
      initContainers:
      - name: wait-for-config-server
        image: busybox:1.35
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for config-server to be ready..."
            until nc -z config-server-service 8888; do
              echo "Config server not ready, waiting..."
              sleep 10
            done
            echo "Config server is ready!"
---
# Eureka Server Service
apiVersion: v1
kind: Service
metadata:
  name: eureka-service
  namespace: arka-ecommerce
  labels:
    app: eureka-server
spec:
  type: ClusterIP
  ports:
  - port: 8761
    targetPort: 8761
    protocol: TCP
    name: http
  selector:
    app: eureka-server
---
# Eureka Server NodePort Service (para acceso externo)
apiVersion: v1
kind: Service
metadata:
  name: eureka-nodeport
  namespace: arka-ecommerce
  labels:
    app: eureka-server
spec:
  type: NodePort
  ports:
  - port: 8761
    targetPort: 8761
    nodePort: 30761
    protocol: TCP
    name: http
  selector:
    app: eureka-server
