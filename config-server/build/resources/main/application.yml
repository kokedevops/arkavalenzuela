# üèóÔ∏è ARKA Config Server Configuration
# Servidor de configuraci√≥n centralizado para microservicios

server:
  port: 8888
  servlet:
    context-path: /

spring:
  application:
    name: config-server
  
  # Config Server Configuration
  cloud:
    config:
      server:
        git:
          # Configuraci√≥n desde directorio local
          uri: file://${user.dir}/config-repository
          clone-on-start: true
          force-pull: true
        # Configuraci√≥n nativa (archivos locales)
        native:
          search-locations: file:../config-repository
  
  # Security Configuration
  security:
    user:
      name: config-admin
      password: config-secret
      roles: ADMIN

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    hostname: localhost
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 20

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,env,configprops,refresh,restart
  endpoint:
    health:
      show-details: always
    refresh:
      enabled: true
  info:
    env:
      enabled: true

# Application Info
info:
  app:
    name: ARKA Config Server
    description: Servidor de configuraci√≥n centralizado para microservicios ARKA
    version: 1.0.0
    author: ARKA Development Team
  config:
    location: file:../config-repository
    profiles: dev,prod,test
    security: basic-auth

# Logging Configuration
logging:
  level:
    org.springframework.cloud.config: DEBUG
    org.springframework.security: INFO
    com.arkavalenzuela: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
